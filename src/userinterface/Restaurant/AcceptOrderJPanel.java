/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.Restaurant;

import Business.DeliveryMan.DeliveryMan;
import Business.DeliveryMan.DeliveryManDirectory;
import Business.EcoSystem;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.FoodOrder;
import Business.WorkQueue.OrderWorkRequest;
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author shshyam
 */
public class AcceptOrderJPanel extends javax.swing.JPanel {

    /**
     * Creates new form AcceptOrderJPanel
     */
    JPanel userProcessContainer;
    UserAccount account;
    EcoSystem ecosystem;
    OrderWorkRequest workRequest;
    double total = 0.0;
    private DefaultTableModel orderTable;
    private DeliveryManDirectory deliveryManDirectory;
    private int index = -1;

    public AcceptOrderJPanel(JPanel userProcessContainer, EcoSystem ecosystem, UserAccount account, OrderWorkRequest workRequest) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.ecosystem = ecosystem;
        this.account = account;
        this.workRequest = workRequest;
        orderTable = (DefaultTableModel) tblOrderDetails.getModel();
        deliveryManDirectory = ecosystem.getDeliveryManDirectory();
        populateDeliveryManList(deliveryManDirectory.getDeliveryManList());
        changeButtonText();
        setVisibleEditable();
        display();
    }

    private void display() {
        
        populateDeliveryManUI();
        
        txtRestName.setText(workRequest.getRestaurant().getName());
        txtOrderStatus.setText(workRequest.getStatus());
        txtMessage.setText(workRequest.getMessage());

        orderTable.setRowCount(0);
        for (FoodOrder itemWithQuantity : workRequest.getItemsWithQuatityList()) {
            Object[] row = new Object[orderTable.getColumnCount()];
            row[0] = itemWithQuantity;
            row[1] = itemWithQuantity.getQuantity();
            row[2] = itemWithQuantity.getItem().getPrice() * itemWithQuantity.getQuantity();
            total += itemWithQuantity.getItem().getPrice() * itemWithQuantity.getQuantity();
            orderTable.addRow(row);
        }
        txtTotalAmount.setText(total + "");

    }

    private void populateDeliveryManUI() {
        if(workRequest.getDeliverMan() == null &&  
                !("ordered".equalsIgnoreCase(workRequest.getStatus()) || "declined".equalsIgnoreCase(workRequest.getStatus()))){
            assignDeliveryPersonLabel.setVisible(true);
            assignDeliveryPerson.setVisible(true);
            addDeliveryPerson.setVisible(true);
            txtDelManName.setVisible(false);
            deliveryManLabel.setVisible(false);
        }else{
            assignDeliveryPersonLabel.setVisible(false);
            assignDeliveryPerson.setVisible(false);
            addDeliveryPerson.setVisible(false);
            txtDelManName.setVisible(true);
            deliveryManLabel.setVisible(true);
            if(workRequest.getDeliverMan() != null){
                txtDelManName.setText(workRequest.getDeliverMan().getName());
            }else{
              txtDelManName.setText("Not Assigned");  
            }
        }
    }
    
      public void populateDeliveryManList(ArrayList<DeliveryMan> deliveryManList) {
        if(workRequest.getDeliverMan() == null) {
            assignDeliveryPerson.setVisible(true);
             for (DeliveryMan deliveryMan : deliveryManList) {
                assignDeliveryPerson.addItem(deliveryMan.getName());
              }
        }else{
            assignDeliveryPerson.setVisible(false);
        } 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();
        deliveryManLabel = new javax.swing.JLabel();
        cartScrollPane1 = new javax.swing.JScrollPane();
        tblOrderDetails = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        btnBack1 = new javax.swing.JButton();
        acceptOrder = new javax.swing.JButton();
        assignDeliveryPerson = new javax.swing.JComboBox<>();
        assignDeliveryPersonLabel = new javax.swing.JLabel();
        addDeliveryPerson = new javax.swing.JButton();
        customerFeedBackPanel = new javax.swing.JPanel();
        declineOrder = new javax.swing.JButton();
        txtDelManName = new javax.swing.JTextField();
        txtRestName = new javax.swing.JTextField();
        txtOrderStatus = new javax.swing.JTextField();
        txtTotalAmount = new javax.swing.JTextField();
        txtMessage = new javax.swing.JTextField();

        setBackground(new java.awt.Color(182, 216, 242));

        jLabel4.setFont(new java.awt.Font("Optima", 0, 14)); // NOI18N
        jLabel4.setText("Restaurant Name                  :");

        deliveryManLabel.setFont(new java.awt.Font("Optima", 0, 14)); // NOI18N
        deliveryManLabel.setText("Delivery Partner Name         :");

        tblOrderDetails.setForeground(new java.awt.Color(87, 132, 186));
        tblOrderDetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item Name", "Item Qty", "Item Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        cartScrollPane1.setViewportView(tblOrderDetails);

        jLabel9.setFont(new java.awt.Font("Optima", 0, 14)); // NOI18N
        jLabel9.setText("Total Order Value :");

        jLabel10.setFont(new java.awt.Font("Optima", 0, 14)); // NOI18N
        jLabel10.setText("Special Requests from Customer : ");

        jLabel12.setFont(new java.awt.Font("Optima", 1, 24)); // NOI18N
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("Order Details");

        jLabel14.setFont(new java.awt.Font("Optima", 0, 14)); // NOI18N
        jLabel14.setText("Order Status                         :");

        btnBack1.setBackground(new java.awt.Color(255, 255, 255));
        btnBack1.setFont(new java.awt.Font("Optima", 1, 18)); // NOI18N
        btnBack1.setForeground(new java.awt.Color(87, 132, 186));
        btnBack1.setText("Go Back");
        btnBack1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBack1ActionPerformed(evt);
            }
        });

        acceptOrder.setBackground(new java.awt.Color(255, 255, 255));
        acceptOrder.setFont(new java.awt.Font("Optima", 1, 18)); // NOI18N
        acceptOrder.setForeground(new java.awt.Color(87, 132, 186));
        acceptOrder.setText("Accept Order");
        acceptOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acceptOrderActionPerformed(evt);
            }
        });

        assignDeliveryPerson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignDeliveryPersonActionPerformed(evt);
            }
        });

        assignDeliveryPersonLabel.setFont(new java.awt.Font("Optima", 0, 14)); // NOI18N
        assignDeliveryPersonLabel.setText("Assign Delivery Partner         :");

        addDeliveryPerson.setBackground(new java.awt.Color(255, 255, 255));
        addDeliveryPerson.setFont(new java.awt.Font("Optima", 1, 18)); // NOI18N
        addDeliveryPerson.setForeground(new java.awt.Color(87, 132, 186));
        addDeliveryPerson.setText("Assign");
        addDeliveryPerson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addDeliveryPersonActionPerformed(evt);
            }
        });

        customerFeedBackPanel.setBackground(new java.awt.Color(182, 216, 242));

        javax.swing.GroupLayout customerFeedBackPanelLayout = new javax.swing.GroupLayout(customerFeedBackPanel);
        customerFeedBackPanel.setLayout(customerFeedBackPanelLayout);
        customerFeedBackPanelLayout.setHorizontalGroup(
            customerFeedBackPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 718, Short.MAX_VALUE)
        );
        customerFeedBackPanelLayout.setVerticalGroup(
            customerFeedBackPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 114, Short.MAX_VALUE)
        );

        declineOrder.setBackground(new java.awt.Color(255, 255, 255));
        declineOrder.setFont(new java.awt.Font("Optima", 1, 18)); // NOI18N
        declineOrder.setForeground(new java.awt.Color(87, 132, 186));
        declineOrder.setText("Decline Order");
        declineOrder.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                declineOrderMousePressed(evt);
            }
        });

        txtTotalAmount.setEditable(false);

        txtMessage.setEditable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(208, 208, 208)
                        .addComponent(acceptOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(60, 60, 60)
                        .addComponent(declineOrder))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(96, 96, 96)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnBack1)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(cartScrollPane1)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel9)
                                    .addGap(4, 4, 4)
                                    .addComponent(txtTotalAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(47, 47, 47)
                                    .addComponent(jLabel10)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(customerFeedBackPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(assignDeliveryPersonLabel)
                                            .addComponent(deliveryManLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(assignDeliveryPerson, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtDelManName)
                                        .addComponent(txtRestName, javax.swing.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE)
                                        .addComponent(txtOrderStatus, javax.swing.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(addDeliveryPerson, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(154, 154, 154))))))
                .addContainerGap(88, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {acceptOrder, declineOrder});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnBack1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel12)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(assignDeliveryPerson, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(assignDeliveryPersonLabel)
                    .addComponent(addDeliveryPerson))
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deliveryManLabel)
                    .addComponent(txtDelManName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtRestName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(txtOrderStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(cartScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10)
                    .addComponent(txtTotalAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMessage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(acceptOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(declineOrder))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(customerFeedBackPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {acceptOrder, declineOrder});

    }// </editor-fold>//GEN-END:initComponents

    private void btnBack1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBack1ActionPerformed
        // TODO add your handling code here:
        AllOrdersJPanel manageOrderJPanel = new AllOrdersJPanel(userProcessContainer,ecosystem, account);
            userProcessContainer.add("ManageOrderJPanel", manageOrderJPanel);
            CardLayout layout = (CardLayout)userProcessContainer.getLayout();
            layout.next(userProcessContainer);
    }//GEN-LAST:event_btnBack1ActionPerformed

    private void acceptOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acceptOrderActionPerformed
        // TODO add your handling code here:
        if (workRequest.getStatus().equals("Ordered")) {
            workRequest.setStatus("Preparing"); 
            JOptionPane.showMessageDialog(null, " Order Accepted Successfully!!, Please assign delivery person");
        }else if(workRequest.getStatus().equals("Preparing")){
             workRequest.setStatus("Prepared");
             if(workRequest.getDeliverMan() == null){
                 JOptionPane.showMessageDialog(null, " Order Prepared Successfully!!, Please assign delivery person");
             }else{
                 JOptionPane.showMessageDialog(null, "Hurray, Delivery person will pick up the order in few minutes !!!");
             }
        }
        else{  
            acceptOrder.setVisible(false);
        }
        changeButtonText();
        txtOrderStatus.setText(workRequest.getStatus());
        
    }//GEN-LAST:event_acceptOrderActionPerformed

    private void assignDeliveryPersonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignDeliveryPersonActionPerformed
        // TODO add your handling code here:
        index = assignDeliveryPerson.getSelectedIndex();
        //clear of the selected items
     
       
    }//GEN-LAST:event_assignDeliveryPersonActionPerformed

    private void addDeliveryPersonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addDeliveryPersonActionPerformed
        // TODO add your handling code here:
        if(index >= 0){
            DeliveryMan deliveryMan = deliveryManDirectory.getDeliveryManList().get(index);
            workRequest.setDeliverMan(deliveryMan);
            JOptionPane.showMessageDialog(null, "Delivery person assigned successfully!!!");
            populateDeliveryManUI();
        }
    }//GEN-LAST:event_addDeliveryPersonActionPerformed

    private void declineOrderMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_declineOrderMousePressed
        declineOrder();
    }//GEN-LAST:event_declineOrderMousePressed

    private void declineOrder(){
        workRequest.setStatus("Declined");
        JOptionPane.showMessageDialog(null, "You have just declined the order, we will notify it to the customer!!");
        changeButtonText();
        txtOrderStatus.setText(workRequest.getStatus());
    }
    
    private void changeButtonText() {
        switch(workRequest.getStatus()){
            case "Ordered":
                  acceptOrder.setText("Accept order");
                  declineOrder.setVisible(true);
                  break;
            case "Preparing":
                  acceptOrder.setText("Ready for delivery");
                  declineOrder.setVisible(false);
                  break;
            default:
                declineOrder.setVisible(false);
                acceptOrder.setVisible(false);
        }
        populateDeliveryManUI();
    }
    
      private void setVisibleEditable(){
        if(workRequest.getStatus().equalsIgnoreCase("delivered")){
            customerFeedBackPanel.setVisible(true);
            //customerFeedbackField.setVisible(true);
            //customerFeedbackField.setEditable(true);
            if(workRequest.getCustomerFeedback() != null){
               // customerFeedbackField.setText(workRequest.getCustomerFeedback());
                //customerFeedbackField.setEditable(false);
            }
        }else{
            customerFeedBackPanel.setVisible(false);
           // customerFeedbackField.setVisible(false);
            //customerFeedbackField.setEditable(false);
           
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton acceptOrder;
    private javax.swing.JButton addDeliveryPerson;
    private javax.swing.JComboBox<String> assignDeliveryPerson;
    private javax.swing.JLabel assignDeliveryPersonLabel;
    private javax.swing.JButton btnBack1;
    private javax.swing.JScrollPane cartScrollPane1;
    private javax.swing.JPanel customerFeedBackPanel;
    private javax.swing.JButton declineOrder;
    private javax.swing.JLabel deliveryManLabel;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTable tblOrderDetails;
    private javax.swing.JTextField txtDelManName;
    private javax.swing.JTextField txtMessage;
    private javax.swing.JTextField txtOrderStatus;
    private javax.swing.JTextField txtRestName;
    private javax.swing.JTextField txtTotalAmount;
    // End of variables declaration//GEN-END:variables

    
}
